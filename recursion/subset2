//Aim: to print all the unique power set of an array

//first sort the array and then call the solve function ans send 0 in it 
// create a set st and a vector num and v
//inside the solve function insert v inside set st
//now run a loop from zero index input to array size and keep on pushing it inside the vector v
// keep on recursively calling the solve function
//now pop back the c vector

class Solution {
public:
    set<vector<int>> st;
    vector<int> num, v;
    void solve(int id) 
    {
        st.insert(v);
        for(int i=id; i<num.size(); i++) 
        {
            v.push_back(num[i]);
            solve(i+1);
            v.pop_back();
        }
    }

    vector<vector<int>> subsetsWithDup(vector<int>& nums) 
    {
        sort(nums.begin(), nums.end());
        num = nums;
        solve(0);
        vector<vector<int>> ans;
        for(auto x: st) ans.push_back(x);
        return ans;
    }
};