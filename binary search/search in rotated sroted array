/*
In this sorted array at a pivot it is rotated we need to use binary search in this to find the target as:


*/
class Solution 
{
public:
    int search(vector<int>& nums, int target) 
    {
        int len = nums.size();
        int i = 0;
        int j = len-1;
        while(i<=j)
        {
            int mid = (i + j) / 2;
            if(nums[mid] == target)
                return mid;
            else if(nums[i] <= nums[mid]) // checking whether first half is in sorted order or not
            {
                if(target < nums[mid] && target >= nums[i]) //if the element is in first half then we will discard second half
                    j = mid - 1;
                else
                    i = mid + 1;
            }
            else
            {
                    if(target > nums[mid] && target <= nums[j])
                        i = mid + 1;
                    else
                        j = mid - 1;
            }
        }
        return -1;
    }
};